# name: Update Release Notes

# on:
#   push:
#     branches:
#       - main  # Change this to your branch name

# jobs:
#   update-release-notes:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Check out repository
#         uses: actions/checkout@v2

#       - name: Read commit message
#         id: read-commit-message
#         run: echo "::set-output name=message::$(cat commit_message.txt)"

#       - name: Read description
#         id: read-description
#         run: echo "::set-output name=description::$(cat description.txt)"

#       - name: Create Release
#         id: create-release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: ${{ github.ref }}
#           release_name: Release ${{ github.ref }}
#           body: |
#             Commit Message: ${{ steps.read-commit-message.outputs.message }}
#             Description: ${{ steps.read-description.outputs.description }}
#           draft: false
#           prerelease: false


#           name: Generate Release Notes


name: Generate Release Notes

on:
  push:
    branches:
      - main

jobs:
  generate_release_notes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Read content from README.md
        id: read_readme
        #run: echo "::set-output name=content::$(cat README.md)"
        run: RELEASE_NOTES=$(cat README.md)
         echo "::set-output name=notes::$RELEASE_NOTES"

      - name: Extract version from README.md
        id: extract_version
        run: echo "${{ steps.read_readme.outputs.content }}"

      # - name: Publish Release Notes
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       
      #   run: |
      #     # Your script or command to publish release notes using the extracted version
      #     # Example:
      #     echo "Publishing release notes for version $VERSION"

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: v1.0.1
      #     release_name: Release v1.0.0
      #     body: ${{ steps.read_readme.outputs.content }}
      #     draft: false
      #     prerelease: false

      - name: Get Latest Tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "v0.0.0")
          echo "::set-output name=latest_tag::$latest_tag"

      - name: Increment Tag
        id: increment_tag
        run: |
            current_tag="${{ steps.get_latest_tag.outputs.latest_tag }}"
            IFS='.' read -r -a parts <<< "$current_tag"
            major="${parts[0]}"
            minor="${parts[1]}"
            patch="${parts[2]}"
            patch=$((patch+1))
            next_tag="$major.$minor.$patch"
            echo "::set-output name=next_tag::$next_tag"
    
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
          tag_name: ${{ steps.increment_tag.outputs.next_tag }}
          release_name: Release ${{ steps.increment_tag.outputs.next_tag }}
          body: ${{ steps.read_readme.outputs.content }}
          draft: false
          prerelease: false